{
    "openapi": "3.0.0",
    "info": {
        "title": "Swagger TerraMafia",
        "description": "Api documentation TerraMafia",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "/",
            "description": "OpenApi host"
        }
    ],
    "paths": {
        "api": {},
        "/api/v1/auth/login/{provider}": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Запрос получения URL для аутентификации через социальный аккаунт",
                "operationId": "App\\Http\\Controllers\\Api\\V1\\User\\ISocialAuthController::getAuthUrlForExternalService",
                "parameters": [
                    {
                        "name": "provider",
                        "in": "path",
                        "description": "Идентификатор провайдера",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/SocialProviderList"
                        }
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "Значение параметра вернётся в обратной ссылке после авторизации у провайдера.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Получена ссылка для переадресации",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "redirectUrl": {
                                            "description": "Возвращает ссылку для авторизации через социальный аккаунт.",
                                            "type": "string",
                                            "example": "https://example.com/"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/login/{provider}/callback": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Обработка ответа, пришедшего от провайдера.",
                "operationId": "App\\Http\\Controllers\\Api\\V1\\User\\ISocialAuthController::handleProviderCallback",
                "parameters": [
                    {
                        "name": "provider",
                        "in": "path",
                        "description": "Идентификатор провайдера",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/SocialProviderList"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "code": {
                                        "description": "Код авторизации через социальный аккаунт",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Выполнен вход через социальный аккаунт",
                        "headers": {
                            "Set-Cookie": {
                                "description": "Установка ACCESS_TOKEN cookie.",
                                "schema": {
                                    "type": "string",
                                    "example": "token=***; Path=/; HttpOnly"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RespondWithToken"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Токен не действителен."
                    }
                }
            }
        },
        "/api/v1/me": {
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "Персональные данные текущего пользователя.",
                "operationId": "App\\Http\\Controllers\\Api\\V1\\User\\IUserAccountController::getMe",
                "responses": {
                    "200": {
                        "description": "Персональные данные.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Требуется авторизация."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Account"
                ],
                "summary": "Запрос обновит профиль пользователя",
                "operationId": "App\\Http\\Controllers\\Api\\V1\\User\\IUserAccountController::updatePlayer",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePlayerRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Возвращает обновленного пользователя",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Account"
                ],
                "summary": "Запрос добавления  персональных данных пользователя",
                "operationId": "App\\Http\\Controllers\\Api\\V1\\User\\IUserAccountController::addPersonalInfo",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddPersonalRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Персональные данные успешно добавлены."
                    },
                    "401": {
                        "description": "Требуется авторизация."
                    },
                    "422": {
                        "description": "Ошибка валидации."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/me/email/confirmation": {
            "post": {
                "tags": [
                    "Account"
                ],
                "summary": "Подтверждение email пользователя по токену",
                "operationId": "App\\Http\\Controllers\\Api\\V1\\User\\IUserAccountController::confirmEmail",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangeEmailConfirmationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Email успешно подтвержден",
                        "headers": {
                            "Set-Cookie": {
                                "description": "Установка ACCESS_TOKEN cookie",
                                "schema": {
                                    "type": "string",
                                    "example": "token=***; Path=/; HttpOnly"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RespondWithToken"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Требуется авторизация"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/me/email": {
            "put": {
                "tags": [
                    "Account"
                ],
                "summary": "Отправка заявки на потверждение email пользователя",
                "operationId": "App\\Http\\Controllers\\Api\\V1\\User\\IUserAccountController::sendEmailVerification",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SendEmailRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Email успешно изменен"
                    },
                    "422": {
                        "description": "Ошибка валидации или пароль введен неверно"
                    }
                }
            }
        },
        "/api/v1/me/password": {
            "post": {
                "tags": [
                    "Account"
                ],
                "summary": "Изменение пароля авторизованного пользователя",
                "operationId": "App\\Http\\Controllers\\Api\\V1\\User\\IUserAccountController::changePassword",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangePasswordRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Пароль успешно изменен"
                    },
                    "422": {
                        "description": "Ошибка валидации или пароль введен не верно"
                    },
                    "401": {
                        "description": "Требуется авторизация"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Аутентификация пользователя по email.",
                "operationId": "App\\Http\\Controllers\\Api\\V1\\User\\IUserAuthController::login",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AuthenticateUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Аутентификация прошла успешно.",
                        "headers": {
                            "Set-Cookie": {
                                "description": "Установка ACCESS_TOKEN cookie.",
                                "schema": {
                                    "type": "string",
                                    "example": "token=***; Path=/; HttpOnly"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RespondWithToken"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Ошибка валидации."
                    },
                    "404": {
                        "description": "Пользователь не найден."
                    }
                }
            }
        },
        "/api/v1/auth/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Инвалидация токена.",
                "operationId": "App\\Http\\Controllers\\Api\\V1\\User\\IUserAuthController::logout",
                "responses": {
                    "200": {
                        "description": "Токен инвалидирован.",
                        "headers": {
                            "Set-Cookie": {
                                "description": "Удаление ACCESS_TOKEN cookie.",
                                "schema": {
                                    "type": "string",
                                    "example": "token=deleted; Path=/; HttpOnly"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Требуется авторизация."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/auth/forgot": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Восстановление пароля.",
                "description": "После запроса на email пользователя будет отправлена ссылка для восстановления пароля.",
                "operationId": "App\\Http\\Controllers\\Api\\V1\\User\\IUserAuthController::forgot",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ForgotPasswordRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "На email отправлена ссылка для восстановления пароля."
                    },
                    "404": {
                        "description": "Пользователь не найден."
                    }
                }
            }
        },
        "/api/v1/auth/resetPassword": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Сброс и установка нового пароля пользователя.",
                "operationId": "App\\Http\\Controllers\\Api\\V1\\User\\IUserAuthController::resetPassword",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResetPasswordRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Пароль успешно изменен."
                    },
                    "400": {
                        "description": "Код сброса пароля уже не действителен."
                    }
                }
            }
        },
        "/api/v1/users": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Запрос вернет всех пользователей",
                "operationId": "App\\Http\\Controllers\\Api\\V1\\User\\IUserController::getPlayerList",
                "responses": {
                    "200": {
                        "description": "Список пользователей",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserListResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Требуется авторизация"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/users/register": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Регистрация пользователя по email.",
                "operationId": "register",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterPlayerRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Регистрация прошла успешно.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "uuid": {
                                            "description": "Регистрация пользователя.",
                                            "type": "string",
                                            "example": "SHdjwdfANJiSJdn"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Ошибка валидации."
                    }
                }
            }
        },
        "/api/v1/users/{uuid}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Запрос вернет пользователя с данным id",
                "operationId": "App\\Http\\Controllers\\Api\\V1\\User\\IUserController::getPlayerByUuid",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Идентификатор пользователя",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Возвращает пользователя с данным id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Требуется авторизация"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Запрос удалит пользователя с данным id",
                "operationId": "App\\Http\\Controllers\\Api\\V1\\User\\IUserController::deletePlayer",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "Идентификатор пользователя",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Пользователь успешно удален"
                    },
                    "401": {
                        "description": "Требуется авторизация"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/info": {
            "get": {
                "tags": [
                    "App"
                ],
                "summary": "Проверка api.",
                "description": "После запроса будет получена текстовая информация об успешности работы api.",
                "operationId": "App\\Http\\Controllers\\IndexController::info",
                "responses": {
                    "200": {
                        "description": "API работает."
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "SocialProviderList": {
                "enum": [
                    "vkontakte",
                    "facebook",
                    "google"
                ]
            },
            "RespondWithToken": {
                "title": "Ответ с токеном аутентификации.",
                "properties": {
                    "message": {
                        "description": "Сообщение.",
                        "type": "string",
                        "example": "Аутентификация прошла успешно."
                    },
                    "ttl": {
                        "description": "Время жизни токена (в минутах).",
                        "type": "integer",
                        "example": "60"
                    },
                    "uuid": {
                        "description": "Глобальный идентификатор пользователя.",
                        "type": "string",
                        "example": "1c6383b4-90b7-431e-a9c0-fb398ea3225f"
                    }
                },
                "type": "object"
            },
            "AddPersonalRequest": {
                "title": "Запрос на добавление персональных данных игрока",
                "required": [
                    "fullName",
                    "gender",
                    "specialisationId"
                ],
                "properties": {
                    "firstName": {
                        "title": "Имя пользователя(игрока)",
                        "description": "Класс валидации запроса на добавление персональных данных игрока.",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "example": "Федор"
                    },
                    "lastName": {
                        "title": "Фамилия пользователя(игрока)",
                        "description": "Класс валидации запроса на добавление персональных данных игрока.",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "example": "Панасенко"
                    },
                    "patronymic": {
                        "title": "Отчество пользователя(игрока)",
                        "description": "Класс валидации запроса на добавление персональных данных игрока.",
                        "type": "string",
                        "maxLength": 255,
                        "minLength": 1,
                        "example": "Остапович"
                    },
                    "birthdate": {
                        "title": "Дата рождения",
                        "description": "Класс валидации запроса на добавление персональных данных игрока.",
                        "type": "string",
                        "format": "date",
                        "example": "1981-10-10",
                        "nullable": true
                    },
                    "gender": {
                        "title": "Пол",
                        "description": "Класс валидации запроса на добавление персональных данных игрока.",
                        "type": "string",
                        "enum": [
                            "male",
                            "female",
                            "other"
                        ],
                        "example": "male"
                    }
                },
                "type": "object"
            },
            "AuthenticateUserRequest": {
                "title": "Запрос аутентификации пользователя.",
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "description": "Email.",
                        "type": "string",
                        "example": "admin@terra.ru"
                    },
                    "password": {
                        "description": "Пароль пользователя.",
                        "type": "string",
                        "minLength": 6,
                        "example": "123456"
                    },
                    "rememberMe": {
                        "description": "Флаг сохренения состояния сессии.",
                        "type": "boolean",
                        "example": "true"
                    }
                },
                "type": "object"
            },
            "ChangeEmailConfirmationRequest": {
                "title": "Запрос на подтверждение нового email",
                "required": [
                    "confirmationToken"
                ],
                "properties": {
                    "confirmationToken": {
                        "description": "Токен",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ChangePasswordRequest": {
                "title": "Запрос изменения пароля",
                "required": [
                    "currentPassword",
                    "newPassword"
                ],
                "properties": {
                    "currentPassword": {
                        "title": "Текущий пароль",
                        "description": "Класс валидации запроса редактирования пароля.",
                        "type": "string",
                        "example": "123456"
                    },
                    "newPassword": {
                        "title": "Новый пароль",
                        "description": "Класс валидации запроса редактирования пароля.",
                        "type": "string",
                        "minLength": 5,
                        "example": "123456"
                    }
                },
                "type": "object"
            },
            "ForgotPasswordRequest": {
                "title": "Запрос на восстановление пароля.",
                "required": [
                    "email"
                ],
                "properties": {
                    "email": {
                        "description": "Email пользователя.",
                        "type": "string",
                        "example": "admin@terra.ru"
                    }
                },
                "type": "object"
            },
            "RegisterPlayerRequest": {
                "title": "Запрос регистрации игрока.",
                "required": [
                    "email",
                    "playerName",
                    "password"
                ],
                "properties": {
                    "email": {
                        "description": "Email.",
                        "type": "string",
                        "example": "test@terra.ru"
                    },
                    "playerName": {
                        "description": "Внутриигровое имя.",
                        "type": "string",
                        "example": "Лоуренс"
                    },
                    "password": {
                        "description": "Пароль.",
                        "type": "string",
                        "example": "123456"
                    }
                },
                "type": "object"
            },
            "ResetPasswordRequest": {
                "title": "Запрос на редактирование пароля.",
                "required": [
                    "token",
                    "password"
                ],
                "properties": {
                    "token": {
                        "title": "Токен сброса пароля.",
                        "description": "Класс валидации запроса для установки нового пароля пользователя.",
                        "type": "string"
                    },
                    "password": {
                        "title": "Новый пароль.",
                        "description": "Класс валидации запроса для установки нового пароля пользователя.",
                        "type": "string",
                        "minLength": 5
                    }
                },
                "type": "object"
            },
            "SendEmailRequest": {
                "title": "Запрос на изменение email",
                "required": [
                    "currentPassword",
                    "email"
                ],
                "properties": {
                    "currentPassword": {
                        "title": "Текущий пароль",
                        "description": "Класс валидации запроса на изменение email.",
                        "type": "string",
                        "example": "123456"
                    },
                    "email": {
                        "title": "Электронный адрес",
                        "description": "Класс валидации запроса на изменение email.",
                        "type": "string",
                        "example": "user@terra.ru"
                    }
                },
                "type": "object"
            },
            "UpdatePlayerRequest": {
                "title": "Запрос обновления профиля пользователя",
                "properties": {
                    "playerName": {
                        "title": "Имя",
                        "description": "Класс валидации запроса обновления профиля игрока.",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "UserListResource": {
                "title": "Игроки",
                "properties": {
                    "data": {
                        "description": "Список игроков.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserResource"
                        }
                    }
                },
                "type": "object"
            },
            "UserResource": {
                "title": "Пользователь",
                "properties": {
                    "id": {
                        "title": "Идентификатор пользователя.",
                        "description": "Класс JSON ответа с данными пользователя.",
                        "type": "string",
                        "example": "GWOIOISAmWFS"
                    },
                    "playerName": {
                        "title": "Игровое имя пользователя.",
                        "description": "Класс JSON ответа с данными пользователя.",
                        "type": "string",
                        "maxLength": 32,
                        "example": "Лоуренс"
                    },
                    "email": {
                        "title": "Email пользователя.",
                        "description": "Класс JSON ответа с данными пользователя.",
                        "type": "string",
                        "maxLength": 129,
                        "example": "example@gmail.com"
                    },
                    "firstName": {
                        "title": "Имя.",
                        "description": "Класс JSON ответа с данными пользователя.",
                        "type": "string",
                        "maxLength": 120,
                        "example": "Даниил."
                    },
                    "lastName": {
                        "title": "Фамилия.",
                        "description": "Класс JSON ответа с данными пользователя.",
                        "type": "string",
                        "maxLength": 120,
                        "example": "Заврин."
                    },
                    "patronymic": {
                        "title": "Отчество.",
                        "description": "Класс JSON ответа с данными пользователя.",
                        "type": "string",
                        "maxLength": 120,
                        "example": "Алексеевич."
                    },
                    "birthday": {
                        "title": "День рождения.",
                        "description": "Класс JSON ответа с данными пользователя.",
                        "type": "date",
                        "example": "1998-05-22"
                    },
                    "gender": {
                        "title": "Пол",
                        "description": "Класс JSON ответа с данными пользователя.",
                        "type": "string",
                        "enum": [
                            "male",
                            "female",
                            "other"
                        ],
                        "example": "male"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Авторизация по логину и паролю с получением токена авторизации.",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "externalDocs": {
        "description": "Find out more about Swagger",
        "url": "http://swagger.io"
    },
    "security": [
        []
    ]
}
